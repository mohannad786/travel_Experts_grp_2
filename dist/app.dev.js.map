{"version":3,"sources":["app.js"],"names":["createError","require","express","path","cookieParser","logger","assert","indexRouter","contactRouter","galleryRouter","signupRouter","app","set","join","__dirname","use","json","urlencoded","extended","req","res","next","render","init","locals","message","session","msg","err","error","get","status","module","exports"],"mappings":"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","sourcesContent":["var createError = require('http-errors');\nvar express = require('express');\nvar path = require('path');\nvar cookieParser = require('cookie-parser');\nvar logger = require('morgan');\nvar assert= require('assert');\n\n//setup routing to webpages\nvar indexRouter = require('./routes/index');\nvar contactRouter = require('./routes/contact');\nvar galleryRouter = require('./routes/aboutus');\nvar signupRouter = require('./routes/signup');\n//var booking1Router = require('./routes/booking1');\n//var packagesRouter = require('./routes/packages');\nvar app = express();\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine','pug');\n\n// Mongoose connection\n// const MONGO_URL = \"mongodb+srv://mo:comon123@cluster0.c2uhk.mongodb.net/userdata?authSource=admin&replicaSet=atlas-rvxm88-shard-0&readPreference=primary&appname=MongoDB%20Compass&ssl=true\";\n// const mongoose = require(\"mongoose\");\n// mongoose.connect(MONGO_URL, { useNewUrlParser: true, useUnifiedTopology: true });\n// const db = mongoose.connection;\n// db.on(\"error\", console.error.bind(console, \"DB connection error:\"));\n// db.once(\"open\", function () {\n//   console.log(\"We're connected!\");\n// });\n\napp.use(logger('dev'));\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\n\napp.use('/', indexRouter);\napp.use(\"/contact\", contactRouter);\napp.use(\"/signup\", signupRouter);\n//app.use(\"/booking1\", booking1Router);\n\n\n//app.use(\"/packages\", packagesRouter);\n\n app.use('/user-error', function(req, res, next) {\n  res.render('user-error');\n});\n// app.use('/', function(req, res, next) {\n//   // res.render('de');\n// });\n\napp.use('/thankyou', function(req, res, next) {\n  res.render('thankyou');\n});\n\napp.use('/aboutus', function(req, res, next) {\n  res.render('aboutus');\n});\n\n// -------------------------------------------------------------\n// For Passport.js\nrequire(\"./my-passport\").init(app);\n// -------------------------------------------------------------\n//  Put the messages in the res.locals\napp.use((req, res, next) => {\n  res.locals.message = req.session.msg; // Read the message from the session variable\n  req.session.msg = null;\n  next();\n});\n\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n  next(createError(404));\n});\n\n// error handler\napp.use(function(err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render('error');\n});\n\nmodule.exports = app;\n"],"file":"app.dev.js"}