{"version":3,"sources":["app.js"],"names":["createError","require","express","cookieParser","assert","contactRouter","logger","signupRouter","app","path","__dirname","set","use","json","urlencoded","extended","join","init","req","res","next","session","msg","indexRouter","render","err","locals","message","error","get","status","module","exports"],"mappings":"aAAA,IAAIA,YAAcC,QAAQ,eACtBC,QAAUD,QAAQ,WADlBD,KAAAA,QAAcC,QAGdE,aAAeF,QAAQ,iBAFvBC,OAAOD,QAAU,UAIjBG,OAAQH,QAAQ,UAFhBE,YAAYF,QAAU,kBAMtBI,cAAgBJ,QAAQ,oBALxBK,cAAgBL,QAAC,oBAOjBM,aAAeN,QAAQ,mBAGvBO,IAAMN,UALVM,IAAIH,IAAAA,QAAaI,KAAGR,KAAOS,UAAC,UAS5BF,IAAIG,IAAI,cAAc,OAItBH,IAAAI,IAAAN,OAAA,QACAE,IAAAI,IAAAV,QAAAW,QACAL,IAAAI,IAAAV,QAAAY,WAAA,CAAAC,UAAA,KACAP,IAAAI,IAAAT,gBACAK,IAAAI,IAAAV,QAAA,OAAAO,KAAAO,KAAAN,UAAA,YAIAF,QAAQF,iBAARW,KAAAT,KAE2BA,IAA3BI,IAAA,SAAAM,EAAAC,EAAAC,GACAZ,EAAII,OAAIT,QAARe,EAAAG,QAAAC,IACAd,EAAII,QAAIV,IAAO,KAGfkB,MAYAZ,IAAII,IAAI,IAAKW,aACbf,IAAII,IAAI,WAAYP,eARpBG,IAAII,IAAI,UAACM,cAOTV,IAAII,IAAI,cAAR,SAAAM,EAAAC,EAAAC,GACAZ,EAAII,OAAI,gBASPJ,IACDI,IAAA,YAAA,SAAAM,EAAAC,EAAAC,GACAD,EAAAK,OAAA,cAGAhB,IAAII,IAAI,WAAR,SAAqBM,EAAAC,EAAAC,GACnBD,EAAIK,OAAO,aAYbhB,IAAII,IAAI,SAASM,EAAKC,EAAKC,GAA3BZ,EAAAR,YAAiBkB,QAKjBV,IAAII,IAAI,SAAAa,EAAAP,EAAAC,EAAAC,GAEND,EAAIO,OAAOC,QAAUF,EAAIE,QACzBR,EAAIO,OAAOE,MAA+B,gBAAvBV,EAAIV,IAAIqB,IAAI,OAA2BJ,EAAM,GAIhEN,EAAIK,OAAOC,EAAAK,QAAX,KAPFX,EAAAK,OAAA,WAUAO,OAAOC,QAAUxB","file":"app.min.js","sourcesContent":["var createError = require('http-errors');\nvar express = require('express');\nvar path = require('path');\nvar cookieParser = require('cookie-parser');\nvar logger = require('morgan');\nvar assert= require('assert');\n\n//setup routing to webpages\nvar indexRouter = require('./routes/index');\nvar contactRouter = require('./routes/contact');\nvar galleryRouter = require('./routes/aboutus');\nvar signupRouter = require('./routes/signup');\n//var booking1Router = require('./routes/booking1');\n//var packagesRouter = require('./routes/packages');\nvar app = express();\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine','pug');\n\n// Mongoose connection\n// const MONGO_URL = \"mongodb+srv://mo:comon123@cluster0.c2uhk.mongodb.net/userdata?authSource=admin&replicaSet=atlas-rvxm88-shard-0&readPreference=primary&appname=MongoDB%20Compass&ssl=true\";\n// const mongoose = require(\"mongoose\");\n// mongoose.connect(MONGO_URL, { useNewUrlParser: true, useUnifiedTopology: true });\n// const db = mongoose.connection;\n// db.on(\"error\", console.error.bind(console, \"DB connection error:\"));\n// db.once(\"open\", function () {\n//   console.log(\"We're connected!\");\n// });\n\napp.use(logger('dev'));\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\n\n// -------------------------------------------------------------\n// For Passport.js\nrequire(\"./my-passport\").init(app);\n// -------------------------------------------------------------\n\n//  Put the messages in the res.locals\napp.use((req, res, next) => {\n  res.locals.message = req.session.msg; // Read the message from the session variable\n  req.session.msg = null;\n  next();\n});\n\n\napp.use('/', indexRouter);\napp.use(\"/contact\", contactRouter);\napp.use(\"/signup\", signupRouter);\n//app.use(\"/booking1\", booking1Router);\n\n\n//app.use(\"/packages\", packagesRouter);\n\n app.use('/user-error', function(req, res, next) {\n  res.render('user-error');\n});\n// app.use('/', function(req, res, next) {\n//   // res.render('de');\n// });\n\napp.use('/thankyou', function(req, res, next) {\n  res.render('thankyou');\n});\n\napp.use('/aboutus', function(req, res, next) {\n  res.render('aboutus');\n});\n\n// app.use('/log-out', function(req, res, next) {\n//   res.render('logout');\n// });\n\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n  next(createError(404));\n});\n\n// error handler\napp.use(function(err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n// render the error page\n  res.status(err.status || 500);\n  res.render('error');\n});\n\nmodule.exports = app;\n"]}