{"version":3,"sources":["booking1.js"],"names":["mongoose","require","uniqueValidator","Schema","MONGO_URL","mongoDBurl","process","useNewUrlParser","booking1Schema","type","Types","ObjectId","ref","Number","default","userId","required","plugin","module","exports","Booking1","model"],"mappings":"aAGA,IAAMA,SAAWC,QAAQ,YACnBC,gBAAkBD,QAAQ,6BAA1BC,OAAeF,SAAfE,OAGNF,SAFQG,QAAWH,QAAXG,IAEqBC,WAAaC,WAAY,CAAtDL,iBAAiBM,EACfC,oBAAiB,IAInB,IAAMC,eAAiB,IAAIL,OAAO,CAErBM,UAAMN,CAAAA,KAAOO,OAAMC,MAArBA,SAAAC,IAAA,YAA+BA,OAAG,CAAEH,KAAAI,OAAAC,QAAA,GAC/CC,eAAQ,CAAEN,KAAMI,OAAQG,SAAS,iCAEjBR,eAAAS,OAAAf,iBALkBgB,OAAlCC,QAAAC,SAAApB,SAAAqB,MAAA,WAAAb","file":"booking1.min.js","sourcesContent":["\r\n// Create a model booking packages \r\n\r\nconst mongoose = require(\"mongoose\");\r\nconst uniqueValidator = require(\"mongoose-unique-validator\");\r\nconst { Schema } = mongoose;\r\n\r\nmongoose.connect(process.env.MONGO_URL || mongoDBurl, {\r\n  useNewUrlParser: true,\r\n  useUnifiedTopology: true,\r\n});\r\n\r\nconst booking1Schema = new Schema({\r\n   \r\npackageId: { type: Schema.Types.ObjectId, ref: \"Packages\" },\r\nuserId: { type: Number, default: 1 },\r\n  \r\nTravellerCount: {\r\n      type: Number,\r\n      required: \"Traveller Count is required\"\r\n  },\r\n \r\n});\r\n\r\nbooking1Schema.plugin(uniqueValidator);\r\nmodule.exports.Booking1 = mongoose.model('Booking1',booking1Schema);"]}