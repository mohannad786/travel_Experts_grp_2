{"version":3,"sources":["boooking.js"],"names":["mongoose","require","uniqueValidator","connect","process","env","MONGO_URL","mongoDBurl","useNewUrlParser","useUnifiedTopology","db","connection","on","console","error","bind","once","log","BookingSchema","Schema","PackDetail","type","String","required","trim","TripStart","Date","max","TripEnd","TravellerCount","Number","contactSchema","plugin","module","exports","Package","model"],"mappings":";;AACA;AACA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,IAAMC,eAAe,GAAGD,OAAO,CAAC,2BAAD,CAA/B,C,CACA;;;AAEAD,QAAQ,CAACG,OAAT,CAAiBC,OAAO,CAACC,GAAR,CAAYC,SAAZ,IAAyBC,UAA1C,EAAsD;AACpDC,EAAAA,eAAe,EAAE,IADmC;AAEpDC,EAAAA,kBAAkB,EAAE;AAFgC,CAAtD;AAIA,IAAMC,EAAE,GAAGV,QAAQ,CAACW,UAApB,C,CACA;;AACAD,EAAE,CAACE,EAAH,CAAM,OAAN,EAAeC,OAAO,CAACC,KAAR,CAAcC,IAAd,CAAmBF,OAAnB,EAA4B,mBAA5B,CAAf;AACAH,EAAE,CAACM,IAAH,CAAQ,MAAR,EAAgB,YAAY;AAC1BH,EAAAA,OAAO,CAACI,GAAR,CAAY,kBAAZ;AACD,CAFD,E,CAIA;;AACA,IAAMC,aAAa,GAAG,IAAIlB,QAAQ,CAACmB,MAAb,CAAoB;AAExCC,EAAAA,UAAU,EAAE;AACRC,IAAAA,IAAI,EAAEC,MADE;AAERC,IAAAA,QAAQ,EAAE,6CAFF;AAGRC,IAAAA,IAAI,EAAC;AAHG,GAF4B;AAQxCC,EAAAA,SAAS,EAAE;AACPJ,IAAAA,IAAI,EAAEK,IADC;AAEPH,IAAAA,QAAQ,EAAE,kBAFH;AAGPI,IAAAA,GAAG,EAAE;AAHE,GAR6B;AAcxCC,EAAAA,OAAO,EAAE;AACLP,IAAAA,IAAI,EAAEK,IADD;AAELH,IAAAA,QAAQ,EAAE,eAFL;AAGLC,IAAAA,IAAI,EAAE;AAHD,GAd+B;AAoBxCK,EAAAA,cAAc,EAAE;AACZR,IAAAA,IAAI,EAAES,MADM;AAEZP,IAAAA,QAAQ,EAAE;AAFE;AApBwB,CAApB,CAAtB;AA2BAQ,aAAa,CAACC,MAAd,CAAqB9B,eAArB;AACA+B,MAAM,CAACC,OAAP,CAAeC,OAAf,GAAyBnC,QAAQ,CAACoC,KAAT,CAAe,SAAf,EAAyBL,aAAzB,CAAzB","sourcesContent":["\r\n// Using Node.js `require()`\r\nvar mongoose = require(\"mongoose\");\r\nconst uniqueValidator = require(\"mongoose-unique-validator\");\r\n//var mongoDBurl = \"mongodb://localhost:27017/blog\";\r\n\r\nmongoose.connect(process.env.MONGO_URL || mongoDBurl, {\r\n  useNewUrlParser: true,\r\n  useUnifiedTopology: true,\r\n});\r\nconst db = mongoose.connection;\r\n/// To log the Mongoose erros to the console directly\r\ndb.on(\"error\", console.error.bind(console, \"connection error:\"));\r\ndb.once(\"open\", function () {\r\n  console.log(\"we're connected!\");\r\n});\r\n\r\n// Create model that all hotels must abide by\r\nconst BookingSchema = new mongoose.Schema({\r\n   \r\n  PackDetail: {\r\n      type: String,\r\n      required: \"Package Detailsotel description is required\",\r\n      trim:true\r\n  },\r\n\r\n  TripStart: {\r\n      type: Date,\r\n      required: \"Trips Start Date\",\r\n      max: 5\r\n  },\r\n  \r\n  TripEnd: {\r\n      type: Date,\r\n      required: \"Trip End Date\",\r\n      trim: true\r\n  },\r\n  \r\n  TravellerCount: {\r\n      type: Number,\r\n      required: \"Traveller Count is required\"\r\n  }\r\n  \r\n});\r\n\r\ncontactSchema.plugin(uniqueValidator);\r\nmodule.exports.Package = mongoose.model('Package',contactSchema);"],"file":"boooking.dev.js"}