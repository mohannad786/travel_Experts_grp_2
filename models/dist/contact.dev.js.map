{"version":3,"sources":["contact.js"],"names":["mongoose","require","uniqueValidator","connect","process","env","MONGO_URL","mongoDBurl","useNewUrlParser","useUnifiedTopology","db","connection","on","console","error","bind","once","log","contactSchema","Schema","firstname","type","String","required","trim","validate","validator","v","length","message","props","lastname","email","test","value","comment","plugin","module","exports","Contact","model"],"mappings":";;AACA;AACA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,IAAMC,eAAe,GAAGD,OAAO,CAAC,2BAAD,CAA/B,C,CACA;;;AAEAD,QAAQ,CAACG,OAAT,CAAiBC,OAAO,CAACC,GAAR,CAAYC,SAAZ,IAAyBC,UAA1C,EAAsD;AACpDC,EAAAA,eAAe,EAAE,IADmC;AAEpDC,EAAAA,kBAAkB,EAAE;AAFgC,CAAtD;AAIA,IAAMC,EAAE,GAAGV,QAAQ,CAACW,UAApB,C,CACA;;AACAD,EAAE,CAACE,EAAH,CAAM,OAAN,EAAeC,OAAO,CAACC,KAAR,CAAcC,IAAd,CAAmBF,OAAnB,EAA4B,mBAA5B,CAAf;AACAH,EAAE,CAACM,IAAH,CAAQ,MAAR,EAAgB,YAAY;AAC1BH,EAAAA,OAAO,CAACI,GAAR,CAAY,kBAAZ;AACD,CAFD;AAKA,IAAMC,aAAa,GAAG,IAAIlB,QAAQ,CAACmB,MAAb,CAAoB;AACtCC,EAAAA,SAAS,EAAE;AACPC,IAAAA,IAAI,EAAEC,MADC;AAEPC,IAAAA,QAAQ,EAAE,wBAFH;AAGPC,IAAAA,IAAI,EAAE,IAHC;AAIPC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,SAAS,EAAE,mBAAUC,CAAV,EAAa;AACtB,eAAOA,CAAC,CAACC,MAAF,GAAW,CAAlB;AACD,OAHO;AAIRC,MAAAA,OAAO,EAAE,iBAACC,KAAD;AAAA;AAAA;AAJD;AAJH,GAD2B;AAapCC,EAAAA,QAAQ,EAAE;AACRV,IAAAA,IAAI,EAAEC,MADE;AAERC,IAAAA,QAAQ,EAAE,uBAFF;AAGRC,IAAAA,IAAI,EAAE,IAHE;AAIRC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,SAAS,EAAE,mBAAUC,CAAV,EAAa;AACtB,eAAOA,CAAC,CAACC,MAAF,GAAW,CAAlB;AACD,OAHO;AAIRC,MAAAA,OAAO,EAAE,iBAACC,KAAD;AAAA;AAAA;AAJD;AAJF,GAb0B;AAwBpCE,EAAAA,KAAK,EAAE;AACLX,IAAAA,IAAI,EAAEC,MADD;AAELE,IAAAA,IAAI,EAAE,IAFD;AAGJC,IAAAA,QAAQ,EAAE;AACTC,MAAAA,SAAS,EAAE,mBAAUC,CAAV,EAAa;AACtB,eAAO,4JAA4JM,IAA5J,CAAiKN,CAAjK,CAAP;AACD,OAHQ;AAITE,MAAAA,OAAO,EAAE,iBAACC,KAAD;AAAA,yBAAcA,KAAK,CAACI,KAApB;AAAA;AAJA;AAHN,GAxB6B;AAkCpCC,EAAAA,OAAO,EAAE;AACPd,IAAAA,IAAI,EAAEC,MADC;AAEPC,IAAAA,QAAQ,EAAE,8BAFH;AAGPC,IAAAA,IAAI,EAAE,IAHC;AAIPC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,SAAS,EAAE,mBAAUC,CAAV,EAAa;AACtB,eAAOA,CAAC,CAACC,MAAF,GAAW,CAAlB;AACD,OAHO;AAIRC,MAAAA,OAAO,EAAE,iBAACC,KAAD;AAAA;AAAA;AAJD;AAJH;AAlC2B,CAApB,CAAtB;AA+CAZ,aAAa,CAACkB,MAAd,CAAqBlC,eAArB;AACAmC,MAAM,CAACC,OAAP,CAAeC,OAAf,GAAyBvC,QAAQ,CAACwC,KAAT,CAAe,SAAf,EAAyBtB,aAAzB,CAAzB","sourcesContent":["\r\n// Using Node.js `require()`\r\nvar mongoose = require(\"mongoose\");\r\nconst uniqueValidator = require(\"mongoose-unique-validator\");\r\n//var mongoDBurl = \"mongodb://localhost:27017/blog\";\r\n\r\nmongoose.connect(process.env.MONGO_URL || mongoDBurl, {\r\n  useNewUrlParser: true,\r\n  useUnifiedTopology: true,\r\n});\r\nconst db = mongoose.connection;\r\n/// To log the Mongoose erros to the console directly\r\ndb.on(\"error\", console.error.bind(console, \"connection error:\"));\r\ndb.once(\"open\", function () {\r\n  console.log(\"we're connected!\");\r\n});\r\n\r\n\r\nconst contactSchema = new mongoose.Schema({\r\n    firstname: {\r\n        type: String,\r\n        required: \"First name is required\",\r\n        trim: true,\r\n        validate: {\r\n          validator: function (v) {\r\n            return v.length > 3;\r\n          },\r\n          message: (props) => `Please ensure you have entered your comment.`,\r\n        },\r\n      },    \r\n      \r\n      lastname: {\r\n        type: String,\r\n        required: \"last name is required\",\r\n        trim: true,\r\n        validate: {\r\n          validator: function (v) {\r\n            return v.length > 3;\r\n          },\r\n          message: (props) => `Please ensure you have entered your comment.`,\r\n        },\r\n      },    \r\n      email: {\r\n        type: String,\r\n        trim: true,\r\n         validate: {\r\n          validator: function (v) {\r\n            return /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(v);\r\n          },\r\n          message: (props) => `${props.value} is not a valid Email address.`,\r\n        },\r\n      },\r\n      comment: {\r\n        type: String,\r\n        required: \"Please write your post body.\",\r\n        trim: true,\r\n        validate: {\r\n          validator: function (v) {\r\n            return v.length > 3;\r\n          },\r\n          message: (props) => `Please ensure you have entered your comment.`,\r\n        },\r\n      },       \r\n    \r\n});\r\ncontactSchema.plugin(uniqueValidator);\r\nmodule.exports.Contact = mongoose.model('Contact',contactSchema);"],"file":"contact.dev.js"}