{"version":3,"sources":["userdata.js"],"names":["uniqueValidator","require","firstname","mongoose","Schema","type","String","required","validate","validator","length","v","message","lastname","trim","email","test","props","concat","value","comment","password","default","plugin","module","exports","Post","model","userSchema"],"mappings":"aAeA,IAAMA,gBAAkBC,QAAQ,6BAG5BC,WAAW,IAAAC,SAAAC,OAAA,CACPC,UAAMC,CACNC,KAAUD,OACNC,SAHG,yBAIPC,MAAU,EACRC,SAAW,CACTA,UAASC,SAATC,GAFM,OAAA,EAAAA,EAAAD,QAICE,QAAA,WAAA,MAAA,kDAIbC,SAAU,CACJR,KAAEC,OACNC,SAAU,yBACNO,MAHI,EAIRN,SAAU,CACRC,UAAW,SAAAE,GACT,OAAA,EAASD,EAAAA,QAEXE,QAAS,WAAA,MAAA,kDAJDG,MAAA,CAjBqBV,KAAAC,OAwB5BQ,MAAE,EACDN,SADC,CAECC,UAFD,SAAAE,GAGI,MAAE,4JAAAK,KAAAL,IAEPC,QAAO,SAAAK,GAAA,MAAA,GAAAC,OAAAD,EAAAE,MAAA,qCAEAC,QAAA,CAAAf,KAAAC,OAJAC,SAAA,+BA3BoBO,MAAA,EAkCjCM,SAAS,CACDd,UADC,SAAAK,GAEC,OAAE,EAAAA,EAAAD,QAEVF,QAAU,WAAA,MAAA,kDAGPa,SAHO,CAIRT,KAAON,OAAEC,SAAA,0BAAAO,MAAA,EAJDN,SAAA,CAtCqBC,UAAA,SAAAE,GA6CvB,MAAA,gEAAAK,KACFV,IAGNE,QAAU,WAAA,MAAA,0GAMRI,KAAAA,CAASP,KAAAC,OAAAQ,MAAA,EANDQ,QAAA,cAYVR,WAAMS,OAFFvB,iBAAAwB,OAAAC,QAAAC,KAAAvB,SAAAwB,MAAA,OAAAC","file":"userdata.min.js","sourcesContent":["\r\n// Require the mongoose module\r\n// var mongoose = require('mongoose');\r\n// Set up a mongoose connection\r\n// var mongoDB = \"mongodb+srv://mo:comon123@cluster0.c2uhk.mongodb.net/userdata?authSource=admin&replicaSet=atlas-rvxm88-shard-0&readPreference=primary&appname=MongoDB%20Compass&ssl=true\"\r\n// mongoose.connect(mongoDB, { useNewUrlParser: true, useUnifiedTopology: true });\r\n// Get the connection\r\n// var db = mongoose.connection;\r\n// Bind connection to error event (to get notification of connection errors)\r\n// db.on('error', console.error.bind(console, 'MongoDB connection error:'));\r\n\r\n// db.once('open', function () {\r\n//     console.log(\"we're connected!\")\r\n// });\r\n\r\nconst uniqueValidator = require(\"mongoose-unique-validator\");\r\n\r\nconst postSchema = new mongoose.Schema({\r\n    firstname: {\r\n        type: String,\r\n        required: \"First name is required\",\r\n        trim: true,\r\n        validate: {\r\n          validator: function (v) {\r\n            return v.length > 3;\r\n          },\r\n          message: (props) => `Please ensure you have entered your comment.`,\r\n        },\r\n      },    \r\n      \r\n      lastname: {\r\n        type: String,\r\n        required: \"First name is required\",\r\n        trim: true,\r\n        validate: {\r\n          validator: function (v) {\r\n            return v.length > 3;\r\n          },\r\n          message: (props) => `Please ensure you have entered your comment.`,\r\n        },\r\n      },    \r\n      email: {\r\n        type: String,\r\n        trim: true,\r\n         validate: {\r\n          validator: function (v) {\r\n            return /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(v);\r\n          },\r\n          message: (props) => `${props.value} is not a valid Email address.`,\r\n        },\r\n      },\r\n      comment: {\r\n        type: String,\r\n        required: \"Please write your post body.\",\r\n        trim: true,\r\n        validate: {\r\n          validator: function (v) {\r\n            return v.length > 3;\r\n          },\r\n          message: (props) => `Please ensure you have entered your comment.`,\r\n        },\r\n      },       \r\n      password: {\r\n        type: String,\r\n        required: \"Please enter a password\",\r\n        trim: true,\r\n        validate: {\r\n          validator: function (v) {\r\n            return /(?=(.*[0-9]))((?=.*[A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z]))^.{6,}$/.test(\r\n              v\r\n            );\r\n          },\r\n          message: (props) =>\r\n            `Password should have 1 lowercase letter, 1 uppercase letter, 1 number, and be at least 6 characters.`,\r\n        },\r\n      }, // more fields defined below\r\n      role: {\r\n        type: String,\r\n        trim: true,\r\n        default: \"customer\",\r\n      },\r\n\r\n\r\n});\r\npostSchema.plugin(uniqueValidator);\r\n\r\nmodule.exports.Post = mongoose.model('Post', userSchema);"]}