{"version":3,"sources":["contact.js"],"names":["mongoose","require","connect","process","env","MONGO_URL","mongoDBurl","useNewUrlParser","useUnifiedTopology","connection","db","on","bind","console","once","log","contactSchema","Schema","firstname","type","String","required","trim","validate","validator","v","length","message","lastname","email","test","props","concat","value","plugin","uniqueValidator","module","exports","Contact","model"],"mappings":"aACA,IAAAA,SAAAC,QAAA,YACID,gBAAmBC,QAAA,6BAIvBD,SAASE,QAAQC,QAAQC,IAAIC,WAAaC,WAAY,CACpDC,iBAAiB,EADnBP,oBAAiBG,IAEfK,IAAAA,GAAAA,SAAkBC,WAEpBC,GAAAC,GAAQ,QAAGX,QAASS,MAESG,KAD7BC,QAAA,sBAEAH,GAAGI,KAAK,OAAQ,WADdD,QAAIE,IAAN,sBAMA,IAAMC,cAAgB,IAAIhB,SAASiB,OAAO,CACtCC,UAAW,CACHC,KAAEC,OACNC,SAAU,yBACNC,MAHG,EAIPC,SAAU,CACRC,UAAW,SAAAC,GACT,OAAA,EAASC,EAAAA,QAEXC,QAAS,WAAA,MAAA,kDATuBC,SAAA,CAapCA,KAAUR,OACJC,SADI,wBAERA,MAAU,EACNE,SAHI,CAIRA,UAAU,SAAAE,GACRD,OAAW,EAAAC,EAAAC,QADHC,QAAA,WAAA,MAAA,kDAICE,MAAA,CAJDV,KAAAC,OAjBwBE,MAAA,EAwB7BC,SAAA,CACCH,UADD,SAAAK,GAEC,MAFD,4JAAAK,KAAAL,IAIHD,QAAW,SAAAO,GAAA,MAAA,GAAAC,OAAAD,EAAaE,MAAb,qCAGXN,QAAS,CAAAR,KAAAC,OAAAC,SAAA,+BAJAC,MAAA,EA3BuBC,SAAA,CAkC7BC,UAAE,SAAAC,GACDL,OADC,EAAAK,EAAAC,QAGDC,QAHC,WAAA,MAAA,oDAQLA,cAAOO,OAAEC,iBAAAC,OAAAC,QAAAC,QAAAtC,SAAAuC,MAAA,UAAAvB","file":"contact.min.js","sourcesContent":["\r\n// Using Node.js `require()`\r\nvar mongoose = require(\"mongoose\");\r\nconst uniqueValidator = require(\"mongoose-unique-validator\");\r\n//var mongoDBurl = \"mongodb://localhost:27017/blog\";\r\n\r\nmongoose.connect(process.env.MONGO_URL || mongoDBurl, {\r\n  useNewUrlParser: true,\r\n  useUnifiedTopology: true,\r\n});\r\nconst db = mongoose.connection;\r\n/// To log the Mongoose erros to the console directly\r\ndb.on(\"error\", console.error.bind(console, \"connection error:\"));\r\ndb.once(\"open\", function () {\r\n  console.log(\"we're connected!\");\r\n});\r\n\r\n\r\nconst contactSchema = new mongoose.Schema({\r\n    firstname: {\r\n        type: String,\r\n        required: \"First name is required\",\r\n        trim: true,\r\n        validate: {\r\n          validator: function (v) {\r\n            return v.length > 3;\r\n          },\r\n          message: (props) => `Please ensure you have entered your comment.`,\r\n        },\r\n      },    \r\n      \r\n      lastname: {\r\n        type: String,\r\n        required: \"last name is required\",\r\n        trim: true,\r\n        validate: {\r\n          validator: function (v) {\r\n            return v.length > 3;\r\n          },\r\n          message: (props) => `Please ensure you have entered your comment.`,\r\n        },\r\n      },    \r\n      email: {\r\n        type: String,\r\n        trim: true,\r\n         validate: {\r\n          validator: function (v) {\r\n            return /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(v);\r\n          },\r\n          message: (props) => `${props.value} is not a valid Email address.`,\r\n        },\r\n      },\r\n      comment: {\r\n        type: String,\r\n        required: \"Please write your post body.\",\r\n        trim: true,\r\n        validate: {\r\n          validator: function (v) {\r\n            return v.length > 3;\r\n          },\r\n          message: (props) => `Please ensure you have entered your comment.`,\r\n        },\r\n      },       \r\n    \r\n});\r\ncontactSchema.plugin(uniqueValidator);\r\nmodule.exports.Contact = mongoose.model('Contact',contactSchema);"]}