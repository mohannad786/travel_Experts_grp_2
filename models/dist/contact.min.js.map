{"version":3,"sources":["contact.js"],"names":["mongoose","require","uniqueValidator","MONGO_URL","mongoDBurl","useNewUrlParser","useUnifiedTopology","Schema","firstname","contactSchema","trim","String","required","validator","v","length","message","lastname","type","validate","test","props","concat","value","comment","plugin","module","exports","Contact","model"],"mappings":"aAAA,IAAMA,SAAWC,QAAQ,YACnBC,gBAAkBD,QAAQ,6BAD1BD,OAAWC,SAAXD,OACNA,SAAME,QAAAA,QAAkBD,IAAOE,WAACC,WAAA,CAI9BC,iBAAiB,EACjBC,oBAJMC,IAIND,IAAAA,cAAoB,IAAAN,SAAAO,OAAA,CAFtBC,UAAA,CAKMC,KAAAA,OACFD,SAAW,yBACHE,MAAEC,EACNC,SAAU,CACJC,UAHC,SAAAC,GAIC,OAAE,EAAAA,EAAAC,QAENC,QAASD,WAAAA,MAAAA,kDAEFE,SAAA,CAJDC,KAAAP,OALwBC,SAAA,wBAapCK,MAAU,EACJE,SADI,CAERP,UAAU,SAAAE,GACJ,OAHE,EAAAA,EAAAC,QAKNF,QAAW,WAAA,MAAA,kDAGXG,MAAO,CAAEE,KAAAP,OAAAD,MAAA,EAJDS,SAAA,CAjBwBN,UAAA,SAAAC,GAwB7B,MAAA,4JAAAM,KAAAN,IAECE,QAFD,SAAAK,GAAA,MAAA,GAAAC,OAAAD,EAAAE,MAAA,qCAKDC,QAAO,CAFAN,KAAAP,OAITK,SAAS,+BAAAN,MAAA,EAAAS,SAAA,CAJAN,UAAA,SAAAC,GA3BuB,OAAA,EAAAA,EAAAC,QAmC5BJ,QADC,WAAA,MAAA,oDAMHF,cAAAgB,OAASV,iBACVW,OAHOC,QAAAC,QAAA5B,SAAA6B,MAAA,UAAApB","file":"contact.min.js","sourcesContent":["const mongoose = require(\"mongoose\");\r\nconst uniqueValidator = require(\"mongoose-unique-validator\");\r\nconst { Schema } = mongoose;\r\n\r\nmongoose.connect(process.env.MONGO_URL || mongoDBurl, {\r\n  useNewUrlParser: true,\r\n  useUnifiedTopology: true,\r\n});\r\n\r\nconst contactSchema = new mongoose.Schema({\r\n    firstname: {\r\n        type: String,\r\n        required: \"First name is required\",\r\n        trim: true,\r\n        validate: {\r\n          validator: function (v) {\r\n            return v.length > 3;\r\n          },\r\n          message: (props) => `Please ensure you have entered your comment.`,\r\n        },\r\n      },    \r\n      \r\n      lastname: {\r\n        type: String,\r\n        required: \"last name is required\",\r\n        trim: true,\r\n        validate: {\r\n          validator: function (v) {\r\n            return v.length > 3;\r\n          },\r\n          message: (props) => `Please ensure you have entered your comment.`,\r\n        },\r\n      },    \r\n      email: {\r\n        type: String,\r\n        trim: true,\r\n         validate: {\r\n          validator: function (v) {\r\n            return /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(v);\r\n          },\r\n          message: (props) => `${props.value} is not a valid Email address.`,\r\n        },\r\n      },\r\n      comment: {\r\n        type: String,\r\n        required: \"Please write your post body.\",\r\n        trim: true,\r\n        validate: {\r\n          validator: function (v) {\r\n            return v.length > 3;\r\n          },\r\n          message: (props) => `Please ensure you have entered your comment.`,\r\n        },\r\n      },       \r\n    \r\n});\r\ncontactSchema.plugin(uniqueValidator);\r\nmodule.exports.Contact = mongoose.model('Contact',contactSchema);"]}