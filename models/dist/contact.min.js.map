{"version":3,"sources":["contact.js"],"names":["mongoose","require","Schema","connect","process","env","MONGO_URL","mongoDBurl","useNewUrlParser","contactSchema","firstname","String","required","validate","v","validator","length","message","lastname","type","trim","email","test","props","concat","value","comment","plugin","uniqueValidator","Contact"],"mappings":"aAAA,IAAAA,SAAAC,QAAA,YAEMD,gBAAmBC,QAAA,6BAEjBC,OAAWF,SAAXE,OAERF,SAASG,QAAQC,QAAQC,IAAIC,WAAaC,WAAY,CACpDC,iBAHiBR,EAEnBA,oBAAiBI,IAAqC,IAAtDK,cAAA,IAAAT,SAAAE,OAAA,CAKMO,UAAAA,CACFC,KAAWC,OACHC,SADG,yBAEPA,MAAU,EACNC,SAHG,CAIPA,UAAU,SAAAC,GACRC,OAAW,EAAAD,EAAAE,QADHC,QAAA,WAAA,MAAA,kDAAAC,SAAA,CALwBC,KAAAR,OAapCO,SAAU,wBACJE,MAAET,EACNC,SAAU,CACJG,UAHE,SAAAD,GAIA,OAAE,EAAAA,EAAAE,QAENC,QAASD,WAAAA,MAAAA,kDAEFK,MAAA,CAAAF,KAAAR,OAJDS,MAAA,EAjBwBP,SAAA,CAwB7BE,UAAA,SAAAD,GACCH,MADD,4JAAAW,KAAAR,IAGJD,QAAU,SAAAU,GAAA,MAAA,GAAAC,OAAAD,EAAAE,MAAA,qCAGRC,QAHQ,CAITT,KAAON,OAAEC,SAAA,+BAAAQ,MAAA,EAJAP,SAAA,CA3BuBE,UAAA,SAAAD,GAkC3B,OAAA,EAAAA,EAAAE,QAEPJ,QAAU,WAAA,MAAA,oDAKPH,cAHOkB,OAAAC,iBAIRX,OAAAA,QAASY,QAAA7B,SAACuB,MAAD,UAAAd","file":"contact.min.js","sourcesContent":["// Create a model for contact form \r\n\r\nconst mongoose = require(\"mongoose\");\r\nconst uniqueValidator = require(\"mongoose-unique-validator\");\r\nconst { Schema } = mongoose;\r\n\r\nmongoose.connect(process.env.MONGO_URL || mongoDBurl, {\r\n  useNewUrlParser: true,\r\n  useUnifiedTopology: true,\r\n});\r\n\r\nconst contactSchema = new mongoose.Schema({\r\n    firstname: {\r\n        type: String,\r\n        required: \"First name is required\",\r\n        trim: true,\r\n        validate: {\r\n          validator: function (v) {\r\n            return v.length > 3;\r\n          },\r\n          message: (props) => `Please ensure you have entered your comment.`,\r\n        },\r\n      },    \r\n      \r\n      lastname: {\r\n        type: String,\r\n        required: \"last name is required\",\r\n        trim: true,\r\n        validate: {\r\n          validator: function (v) {\r\n            return v.length > 3;\r\n          },\r\n          message: (props) => `Please ensure you have entered your comment.`,\r\n        },\r\n      },    \r\n      email: {\r\n        type: String,\r\n        trim: true,\r\n         validate: {\r\n          validator: function (v) {\r\n            return /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(v);\r\n          },\r\n          message: (props) => `${props.value} is not a valid Email address.`,\r\n        },\r\n      },\r\n      comment: {\r\n        type: String,\r\n        required: \"Please write your post body.\",\r\n        trim: true,\r\n        validate: {\r\n          validator: function (v) {\r\n            return v.length > 3;\r\n          },\r\n          message: (props) => `Please ensure you have entered your comment.`,\r\n        },\r\n      },       \r\n    \r\n});\r\ncontactSchema.plugin(uniqueValidator);\r\nmodule.exports.Contact = mongoose.model('Contact',contactSchema);"]}