{"version":3,"sources":["booking.js"],"names":["mongoose","require","Schema","connect","process","env","MONGO_URL","mongoDBurl","useNewUrlParser","bookingSchema","packageId","type","Types","ObjectId","ref","Number","TravellerCount","userId","required","plugin","uniqueValidator","module","exports","Booking","model"],"mappings":"aACA,IAAAA,SAAAC,QAAA,YACMD,gBAAmBC,QAAA,6BAEjBC,OAAWF,SAAXE,OAERF,SAASG,QAAQC,QAAQC,IAAIC,WAAaC,WAAY,CACpDC,iBAHiBR,EAEnBA,oBAAiBI,IAAqC,IAAtDK,cAAA,IAAAP,OAAA,CAOAQ,UAAS,CAAEC,KAAAT,OAAAU,MAAAC,SAAAC,IAAA,YAAEH,OAAI,CAAET,KAAMa,OAAOF,QAArB,GAAAG,eAFsB,CAGjCC,KAAQF,OAAEJ,SAAF,iCAIFO,cAAUC,OAAAC,iBAFAC,OAAAC,QAAAC,QAAAvB,SAAAwB,MAAA,UAAAf","file":"booking.min.js","sourcesContent":["\r\n// Using Node.js `require()`\r\nconst mongoose = require(\"mongoose\");\r\nconst uniqueValidator = require(\"mongoose-unique-validator\");\r\nconst { Schema } = mongoose;\r\n\r\nmongoose.connect(process.env.MONGO_URL || mongoDBurl, {\r\n  useNewUrlParser: true,\r\n  useUnifiedTopology: true,\r\n});\r\n\r\nconst bookingSchema = new Schema({\r\n   \r\npackageId: { type: Schema.Types.ObjectId, ref: \"Packages\" },\r\nuserId: { type: Number, default: 1 },\r\n  \r\nTravellerCount: {\r\n      type: Number,\r\n      required: \"Traveller Count is required\"\r\n  },\r\n \r\n});\r\n\r\nbookingSchema.plugin(uniqueValidator);\r\nmodule.exports.Booking = mongoose.model('Booking',bookingSchema);"]}