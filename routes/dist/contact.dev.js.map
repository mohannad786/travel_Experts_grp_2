{"version":3,"sources":["contact.js"],"names":["express","require","router","Router","mongoose","uniqueValidator","Contact","get","req","res","next","render","post","contact","firstname","body","lastname","email","comment","save","err","errorArray","errorKeys","Object","keys","errors","forEach","key","push","message","redirect","data","params","email1","findOne","userdat","console","log","module","exports"],"mappings":";;AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAb;;AACA,IAAMC,QAAQ,GAAGH,OAAO,CAAC,UAAD,CAAxB;;AACA,IAAMI,eAAe,GAAGJ,OAAO,CAAC,2BAAD,CAA/B;;AAEA,IAAMK,OAAO,GAAGL,OAAO,CAAC,mBAAD,CAAP,CAA6BK,OAA7C;;AAECJ,MAAM,CAACK,GAAP,CAAW,GAAX,EAAgB,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAEvCD,EAAAA,GAAG,CAACE,MAAJ,CAAW,SAAX;AACD,CAHF,E,CAKD;;AACAT,MAAM,CAACU,IAAP,CAAY,GAAZ,EAAiB,UAAUJ,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AACzC;AACA,MAAMG,OAAO,GAAG,IAAIP,OAAJ,EAAhB;AACAO,EAAAA,OAAO,CAACC,SAAR,GAAoBN,GAAG,CAACO,IAAJ,CAASD,SAA7B;AACAD,EAAAA,OAAO,CAACG,QAAR,GAAkBR,GAAG,CAACO,IAAJ,CAASC,QAA3B;AACAH,EAAAA,OAAO,CAACI,KAAR,GAAeT,GAAG,CAACO,IAAJ,CAASE,KAAxB;AACAJ,EAAAA,OAAO,CAACK,OAAR,GAAiBV,GAAG,CAACO,IAAJ,CAASG,OAA1B;AACAL,EAAAA,OAAO,CAACM,IAAR,CAAa,UAAAC,GAAG,EAAI;AAClB;AACA,QAAIA,GAAJ,EAAS;AAEP,UAAMC,UAAU,GAAG,EAAnB;AACA,UAAMC,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYJ,GAAG,CAACK,MAAhB,CAAlB;AACAH,MAAAA,SAAS,CAACI,OAAV,CAAkB,UAAAC,GAAG;AAAA,eAAIN,UAAU,CAACO,IAAX,CAAgBR,GAAG,CAACK,MAAJ,CAAWE,GAAX,EAAgBE,OAAhC,CAAJ;AAAA,OAArB;AACA,aAAOpB,GAAG,CAACE,MAAJ,CAAW,SAAX,EAAsB;AAC3Bc,QAAAA,MAAM,EAAEJ;AADmB,OAAtB,CAAP;AAGD;;AACDZ,IAAAA,GAAG,CAACqB,QAAJ,CAAa,WAAb;AACD,GAZD;AAaD,CApBD,E,CAsBA;;AACA5B,MAAM,CAACK,GAAP,CAAW,UAAX,EAAuB,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAC/C,MAAMqB,IAAI,GAAGvB,GAAG,CAACwB,MAAJ,CAAWC,MAAxB;AACA3B,EAAAA,OAAO,CAAC4B,OAAR,CAAgB;AAAEjB,IAAAA,KAAK,EAAEc;AAAT,GAAhB,EAAiC,UAACX,GAAD,EAAMP,OAAN,EAAkB;AAClDJ,IAAAA,GAAG,CAACE,MAAJ,CAAW,WAAX,EAAwB;AAAEwB,MAAAA,OAAO,EAACtB;AAAV,KAAxB;AACCuB,IAAAA,OAAO,CAACC,GAAR,CAAYxB,OAAO,CAACK,OAApB,EAFiD,CAGjD;AACD,GAJD;AAKD,CAPD;AASAoB,MAAM,CAACC,OAAP,GAAiBrC,MAAjB","sourcesContent":["var express = require('express');\r\nvar router = express.Router();\r\nconst mongoose = require(\"mongoose\");\r\nconst uniqueValidator = require(\"mongoose-unique-validator\");\r\n\r\nconst Contact = require('../models/contact').Contact;\r\n\r\n router.get('/', function (req, res, next) {\r\n  \r\n    res.render('contact');\r\n  });\r\n\r\n// To create a new database entry\r\nrouter.post('/', function (req, res, next) {\r\n  // const = new Contact(req.body);\r\n  const contact = new Contact();\r\n  contact.firstname = req.body.firstname\r\n  contact.lastname= req.body.lastname\r\n  contact.email= req.body.email\r\n  contact.comment= req.body.comment\r\n  contact.save(err => {\r\n    // if(err) throw err;\r\n    if (err) {\r\n     \r\n      const errorArray = [];\r\n      const errorKeys = Object.keys(err.errors);\r\n      errorKeys.forEach(key => errorArray.push(err.errors[key].message));\r\n      return res.render(\"contact\", {\r\n        errors: errorArray\r\n      });\r\n    }\r\n    res.redirect(\"/thankyou\");\r\n  });\r\n});\r\n\r\n// Shows a single contact\r\nrouter.get('/:email1', function (req, res, next) {\r\n  const data = req.params.email1;\r\n  Contact.findOne({ email: data }, (err, contact) => {\r\n   res.render('user-data', { userdat:contact });\r\n    console.log(contact.comment);\r\n    //console.log(userdat);\r\n  });\r\n});\r\n\r\nmodule.exports = router;\r\n\r\n"],"file":"contact.dev.js"}