{"version":3,"sources":["index.js"],"names":["express","require","router","Router","MongoClient","uniqueValidator","getPackages","pid","callback","mongo","connect","process","env","MONGO_URL","useUnifiedTopology","err","useNewUrlParser","db","collection","query","client","packid","parseInt","find","toArray","items","get","req","res","next","packdata","render","mypackages","packageid","console","log","data","isdetails","module","exports"],"mappings":"aAAA,IAAIA,QAAUC,QAAQ,WAClBC,OAASF,QAAQG,SADjBH,MAAUC,QAAQ,WAAtBG,YAGMC,gBAAkBJ,QAAQ,6BADhC,SAAWK,YAAWC,EAAAC,GAKpBC,MAAMC,QAAQC,QAAQC,IAAIC,UAAW,CAJjCR,iBAAe,EAMjBS,oBAAoB,GAFtBL,SAAAA,EAAMC,GAAkC,GAAAK,EAAA,MAAAA,EACtCC,IACAF,EADAE,EAAiBC,GADkB,YAEfC,WAAA,YAEpBC,EAAMC,GAAcb,IAAAY,EAAAE,OAAAC,SAAAf,IAClBW,EAASK,KAAAJ,GAAAK,QAAA,SAAAT,EAAAU,GAEHP,EAAAA,EAAaD,OAKjBf,OAAAwB,IAAA,IAAA,SAAAC,EAAAC,EAAAC,GAGAvB,YAAA,KACAE,SAAQO,EAAAe,GANV,GAAAf,EAAA,MAAAA,EAWHa,EAAAG,OAAA,QAAA,CACHC,WAAAF,QAK+B5B,OAAAwB,IAAA,cAAA,SAAAC,EAAAC,EAAAC,GACzB,IAAId,EAAKY,EAAMZ,OACfkB,UAWJC,QAAQC,IAAId,GAVPO,YAAAP,EACCW,SAAAA,EAAYF,GADb,GAAAf,EAAA,MAAAA,EAJLa,EAAAG,OAAA,QAAA,CAFFC,WAAAI,EAaAC,WAAA,QAiCAC,OAAOC,QAAUrC","file":"index.min.js","sourcesContent":["var express = require('express');\nvar router = express.Router();\nconst mongo = require(\"mongodb\").MongoClient;\nconst uniqueValidator = require(\"mongoose-unique-validator\");\n\n\nfunction getPackages(pid, callback) {\n  mongo.connect(process.env.MONGO_URL, {  // Create the DB connection\n    useNewUrlParser: true,\n    useUnifiedTopology: true\n  },\n    (err, client) => {  // The callback will be called if the connection was succeded\n      if (err) { throw err; }\n      const db = client.db(\"userdata\");  // get reference to the DB\n      const collection = db.collection(\"packages\"); // Get reference to the collection\n      const query = {}    // Empty query to get all data\n      if (pid) query.packid = parseInt(pid);  // If you need certain product\n      collection.find(query).toArray((err, items) => {\n        // console.log(query)\n        // if (err) { throw err; }\n        \n        // code goes here\n        // console.log(items)\n        callback(err, items)\n      });\n\n    }\n  );\n  }\n/* GET all packages listing. */\n\nrouter.get('/', function (req, res, next) {\n  // Read the packages list from the DB\n  getPackages(null, // null => get all packages\n    function (err, packdata) { // Callback function, will be called when the data from the DB is ready\n      if (err) throw err\n      // Render the PUG template with the product data we got from the DB\n       res.render('index', {\n        mypackages: packdata\n      });\n    }\n  );\n});\n\n/* GET one product listing. */\nrouter.get('/:packageid', function (req, res, next) {\n  const packid = req.params.packageid\n  console.log(packid);\n  getPackages(packid,\n    function (err, data) {\n      if (err) throw err\n      res.render('index', {\n        mypackages: data,\n        isdetails: true,\n        \n      });\n    }\n  );\n});\n\n\n// // Generate random Greeting Program\n// var myarray = ['ready for some exciting time', 'how are you today', 'good to see you', 'hope you are having a good day']\n// const greet = Math.floor(Math.random() * myarray.length);\n// var greetings = myarray[greet];\n// console.log(myarray[greet]);\n\n  \n// // /* GET home page and display greeting message */\n// // router.get('/', function(req, res, next) {\n// //   res.render('index', { \n// //     greet_msg: ('Welcome to our travel Portal,'+greetings ),\n// //     date_time: (new Date()).toString(),\n// //   });\n// // });\n\n\nmodule.exports = router;\n\n\n\n"]}