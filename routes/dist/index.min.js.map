{"version":3,"sources":["index.js"],"names":["express","require","router","Router","MongoClient","uniqueValidator","Booking1","checkAuthenticated","req","res","next","Packages","getPackages","pid","callback","mongo","connect","useNewUrlParser","isAuthenticated","useUnifiedTopology","err","client","redirect","collection","db","query","process","MONGO_URL","find","toArray","items","get","packdata","greet","Math","floor","random","myarray","length","console","log","render","mypackages","greet_msg","greetings","date_time","Date","toString","packid","params","packageid","data","isdetails","post","booking1","userId","user","packageId","body","TravellerCount","save","processErrors","populate","exec","bookingid","_id","module","exports"],"mappings":"aAAA,IAAIA,QAAUC,QAAQ,WAClBC,OAASF,QAAQG,SADjBH,MAAUC,QAAQ,WAAtBG,YAGMC,gBAAkBJ,QAAQ,sCAFXE,QAArB,sBAAID,kBAAAA,mBAIiBD,QAAQ,sBAArBK,mBAAAA,SAFFD,QAAAA,CAAAA,+BAA0B,oBAAhC,kBAAA,kCAOA,SAASE,mBANoBC,EAAAC,EAAAC,GAO3B,GAPMC,EAAAA,kBAQJ,OAAOD,IAETD,EATMH,SASQ,WAIhB,SAASM,YAAYC,EAAKC,GAR1BC,MAAAC,QAAST,QAAAA,IAAmBC,UAAUE,CACpCO,iBAAQC,EACNC,oBAAA,GAWA,SAACC,EAAKC,GATJC,GAAAA,EAAU,MAAAF,EACf,IAWWG,EAXXF,EAAAG,GAAA,YAW2BD,WAAW,YAR9BX,EAAT,GACQI,IAANS,EAAcC,OAAYC,GAAcJ,EAAAK,KAAAH,GAAAI,QAAA,SAAAT,EAAAU,GAKzBhB,EAAAM,EAAAU,OAqBjB5B,OAAO6B,IAAI,IAAK,SAAUvB,EAAKC,EAAKC,GAf5BE,YAAA,KACA,SAAAQ,EAAAY,GAEA,GAAAZ,EAAA,MAAAA,EACA,IAAAa,EAAAC,KAAAC,MAAAD,KAAAE,SAAAC,QAAAC,QACAxB,EAAcgB,QAAdG,GANFM,QAAAC,IAAAH,QAAAJ,IAWHxB,EAAAgC,OAAA,QAAA,CAGHC,WAAAV,EAaQW,UAAY,iCAAiCC,EAC7CC,WAAY,IAAIC,MAAQC,iBAL1BR,OAAAA,IAAO,0BACP,SAAA/B,EAAAC,EAAAC,GAcJ,IAAMsC,EAASxC,EAAIyC,OAAOC,UAbrBzC,QAAIgC,IAAJO,GACCN,YAAAA,EACAC,SAAAA,EAAYQ,GAFb,GAAA/B,EAAA,MAAAA,EAPLX,EAAAgC,OAAA,MAAA,CAFFC,WAAAS,EAmBAC,WAAA,QASM3C,OAAG4C,KAACZ,QAAJ,SAAkBjC,EAAAC,EAAAC,GAChBgC,EAAYS,KAAZT,IACAU,EAAW,IAAA9C,SAFKgD,EAAlBC,OAAA/C,EAAAgD,KAIDF,EARHG,UAAAjD,EAAAkD,KAAAD,UAHFH,EAeAK,eAAAnD,EAAAkD,KAAAC,eAOEpB,QAAQC,IAAIc,EAASG,WANvBvD,EAAA0D,KAAY,SAASxC,GACnB,GAAM+B,EAAO3C,OAAIkD,cAAjBtC,EAAA,MAAAZ,EAAAC,EAAAD,EAAAkD,MACAjD,EAAM6C,SAAW,aAKjBA,OAAAA,IAASM,SAAK,SAAepD,EAAAC,EAAAC,GAC3BJ,SAAAsB,KAAS,CAAA2B,OAAOM,EAAAA,OARpBC,SAAA,aAaAC,KAAA,SAAA3C,EAAAkC,GAOUlC,GAAKmB,QAAQC,IAAIpB,GANrBX,EAANgC,OAAW,QAAU,CAAAa,SAAAA,QACnBpD,OAGG4D,IAHH,qBAIQ,SAAAtD,EAAM8C,EAAN5C,GACJ,IAAIU,EAAYZ,EAAPyC,OAAAe,UACTvD,SAAIgC,iBAAgB,CAAAwB,IAAAD,GAAA,SAAA5C,GAAEkC,GAAAA,QAAAA,IAAAA,GAAF7C,EAApBa,SAAA,SAaN4C,OAAOC,QAAUjE","file":"index.min.js","sourcesContent":["var express = require('express');\nvar router = express.Router();\nconst mongo = require(\"mongodb\").MongoClient;\nconst uniqueValidator = require(\"mongoose-unique-validator\");\nconst { Packages } = require(\"../models/packages\");\nconst { Booking1 } = require(\"../models/booking1\");\n\n// Generate random Greeting Program\nvar myarray = ['ready for some exciting time', 'how are you today', 'good to see you', 'hope you are having a good day']\n\nfunction checkAuthenticated(req, res, next){\n  if (req.isAuthenticated()){ \n    return next()\n  }\n  res.redirect ('/signup')\n}\n\n\nfunction getPackages(pid, callback) {\n  mongo.connect(process.env.MONGO_URL, {  // Create the DB connection\n    useNewUrlParser: true,\n    useUnifiedTopology: true\n  },\n    (err, client) => {  // The callback will be called if the connection was succeded\n      if (err) { throw err; }\n      const db = client.db(\"userdata\");  // get reference to the DB\n      const collection = db.collection(\"packages\"); // Get reference to the collection\n      const query = {}    // Empty query to get all data\n      if (pid) query.packid = (pid);  // If you need certain product\n      collection.find(query).toArray((err, items) => {\n        // console.log(query)\n        // if (err) { throw err; }\n        \n        // code goes here\n        // console.log(items)\n        callback(err, items)\n      });\n\n    }\n  );\n  }\n\n\n/* GET all packages listing. */\n\nrouter.get('/', function (req, res, next) {\n  // Read the packages list from the DB\n  getPackages(null, // null => get all packages\n    function (err, packdata) { // Callback function, will be called when the data from the DB is ready\n      if (err) throw err\n      const greet = Math.floor(Math.random() * myarray.length);\n      var greetings = myarray[greet];\n      console.log(myarray[greet]);\n      // Render the PUG template with the product data we got from the DB\n       res.render('index', {\n        mypackages: packdata,\n        greet_msg: ('Welcome to our travel Portal, '+greetings),\n        date_time: (new Date()).toString(),\n        \n      });\n    }\n  );\n});\n\n/* GET one product listing. */\n\nrouter.get('/details/det/:packageid', function (req, res, next) {\n  const packid = req.params.packageid\n  console.log(packid);\n  getPackages(packid,\n    function (err, data) {\n \n      if (err) throw err\n      res.render('det', {\n        mypackages: data,\n        isdetails: true,  \n      });\n    }\n  );\n});\n\n// load booking data\nrouter.post(\"/book\", function (req, res, next) {\n  const data = req.body;\n  const booking1 = new Booking1();\n  booking1.userId = (req.user);\n  booking1.packageId = req.body.packageId;\n  booking1.TravellerCount = req.body.TravellerCount;\n  console.log(booking1.packageId);\n  booking1.save(function (err) {\n    if (err) return processErrors(err, \"det\", req, res, req.body);\n    res.redirect(\"book1\");\n  });\n});\n\n/* GET the purchases page. */\nrouter.get(\"/book1\", function (req, res, next) {\n  Booking1.find({ userId: (req.user) })\n    // Replace the productId with the corresponding product object from the products collection(table)\n    //console.log(Booking1)\n    .populate(\"packageId\")\n    .exec((err, booking1) => {\n      if (err) console.log(err);\n      res.render(\"book1\", { booking1 });\n    });\n});\n\n/* Process the product return, sent as GET request, for the given product Id. */\nrouter.get(\"/return/:bookingid\", function (req, res, next) {\n  const bookingid = req.params.bookingid;\n  Booking1.findOneAndDelete({ _id: bookingid }, (err) => {\n    if (err) console.log(err);\n    res.redirect(\"/\"); // Redirect to the purchases page\n  });\n});\n\nmodule.exports = router;\n\n\n\n"]}