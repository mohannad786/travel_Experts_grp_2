{"version":3,"sources":["packages.js"],"names":["express","require","router","Router","mongo","MongoClient","uniqueValidator","getPackages","pid","callback","connect","MONGO_URL","useNewUrlParser","useUnifiedTopology","err","client","db","collection","query","packid","parseInt","find","toArray","items","get","req","res","next","packdata","render","mypackages","params","data","isdetails","module","exports"],"mappings":";;AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAb;;AACA,IAAMC,KAAK,GAAGH,OAAO,CAAC,SAAD,CAAP,CAAmBI,WAAjC,C,CAEA;AACA;;;AACA,IAAMC,eAAe,GAAGL,OAAO,CAAC,2BAAD,CAA/B;;AAEA,SAASM,WAAT,CAAqBC,GAArB,EAA0BC,QAA1B,EAAoC;AAClCL,EAAAA,KAAK,CAACM,OAAN,CAAcC,SAAd,EAAyB;AAAG;AAC1BC,IAAAA,eAAe,EAAE,IADM;AAEvBC,IAAAA,kBAAkB,EAAE;AAFG,GAAzB,EAIE,UAACC,GAAD,EAAMC,MAAN,EAAiB;AAAG;AAClB,QAAID,GAAJ,EAAS;AAAE,YAAMA,GAAN;AAAY;;AACvB,QAAME,EAAE,GAAGD,MAAM,CAACC,EAAP,CAAU,UAAV,CAAX,CAFe,CAEoB;;AACnC,QAAMC,UAAU,GAAGD,EAAE,CAACC,UAAH,CAAc,UAAd,CAAnB,CAHe,CAG+B;;AAC9C,QAAMC,KAAK,GAAG,EAAd,CAJe,CAIK;;AACpB,QAAIV,GAAJ,EAASU,KAAK,CAACC,MAAN,GAAeC,QAAQ,CAACZ,GAAD,CAAvB,CALM,CAKyB;;AACxCS,IAAAA,UAAU,CAACI,IAAX,CAAgBH,KAAhB,EAAuBI,OAAvB,CAA+B,UAACR,GAAD,EAAMS,KAAN,EAAgB;AAC7C;AACA;AAEA;AACA;AACAd,MAAAA,QAAQ,CAACK,GAAD,EAAMS,KAAN,CAAR;AACD,KAPD;AASD,GAnBH;AAsBD,C,CAED;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;;AACArB,MAAM,CAACsB,GAAP,CAAW,GAAX,EAAgB,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AACxC;AACApB,EAAAA,WAAW,CAAC,IAAD,EAAO;AAChB,YAAUO,GAAV,EAAec,QAAf,EAAyB;AAAE;AACzB,QAAId,GAAJ,EAAS,MAAMA,GAAN,CADc,CAEvB;;AACAY,IAAAA,GAAG,CAACG,MAAJ,CAAW,UAAX,EAAuB;AACrBC,MAAAA,UAAU,EAAEF;AADS,KAAvB;AAGD,GAPQ,CAAX;AASD,CAXD;AAaA;;AACA1B,MAAM,CAACsB,GAAP,CAAW,kBAAX,EAA+B,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AACvD,MAAMR,MAAM,GAAGM,GAAG,CAACM,MAAJ,CAAWZ,MAA1B;AACAZ,EAAAA,WAAW,CAACY,MAAD,EACT,UAAUL,GAAV,EAAekB,IAAf,EAAqB;AACnB,QAAIlB,GAAJ,EAAS,MAAMA,GAAN;AACTY,IAAAA,GAAG,CAACG,MAAJ,CAAW,UAAX,EAAuB;AACrBC,MAAAA,UAAU,EAAEE,IADS;AAErBC,MAAAA,SAAS,EAAE;AAFU,KAAvB;AAID,GAPQ,CAAX;AASD,CAXD;AAaAC,MAAM,CAACC,OAAP,GAAiBjC,MAAjB","sourcesContent":["var express = require('express');\r\nvar router = express.Router();\r\nconst mongo = require(\"mongodb\").MongoClient;\r\n\r\n//const url = \"mongodb://localhost:27017\";\r\n//const url = \"mongodb+srv://mo:comon123@cluster0.c2uhk.mongodb.net/test?authSource=admin&replicaSet=atlas-rvxm88-shard-0&readPreference=primary&appname=MongoDB%20Compass&ssl=true\"\r\nconst uniqueValidator = require(\"mongoose-unique-validator\");\r\n\r\nfunction getPackages(pid, callback) {\r\n  mongo.connect(MONGO_URL, {  // Create the DB connection\r\n    useNewUrlParser: true,\r\n    useUnifiedTopology: true\r\n  },\r\n    (err, client) => {  // The callback will be called if the connection was succeded\r\n      if (err) { throw err; }\r\n      const db = client.db(\"userdata\");  // get reference to the DB\r\n      const collection = db.collection(\"packages\"); // Get reference to the collection\r\n      const query = {}    // Empty query to get all data\r\n      if (pid) query.packid = parseInt(pid);  // If you need certain product\r\n      collection.find(query).toArray((err, items) => {\r\n        // console.log(query)\r\n        // if (err) { throw err; }\r\n        \r\n        // code goes here\r\n        // console.log(items)\r\n        callback(err, items)\r\n      });\r\n\r\n    }\r\n  );\r\n\r\n}\r\n\r\n// const packages = [\r\n//   id\r\n\r\n// packid:\r\n// \"1\"\r\n// packname\r\n// :\r\n// \"Malvdives Selight\"\r\n// imgpath\r\n// :\r\n// \"/images/cub-1.jpg\"\r\n// packprice\r\n// :\r\n// \"$4000\"\r\n\r\n\r\n/* GET all packages listing. */\r\nrouter.get('/', function (req, res, next) {\r\n  // Read the packages list from the DB\r\n  getPackages(null, // null => get all packages\r\n    function (err, packdata) { // Callback function, will be called when the data from the DB is ready\r\n      if (err) throw err\r\n      // Render the PUG template with the product data we got from the DB\r\n      res.render('packages', {\r\n        mypackages: packdata\r\n      });\r\n    }\r\n  );\r\n});\r\n\r\n/* GET one product listing. */\r\nrouter.get('/details/:packid', function (req, res, next) {\r\n  const packid = req.params.packid\r\n  getPackages(packid,\r\n    function (err, data) {\r\n      if (err) throw err\r\n      res.render('packages', {\r\n        mypackages: data,\r\n        isdetails: true\r\n      });\r\n    }\r\n  );\r\n});\r\n\r\nmodule.exports = router;\r\n"],"file":"packages.dev.js"}